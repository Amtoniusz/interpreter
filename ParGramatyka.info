-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from ParGramatyka.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	String -> L_quoted                                 (1)
	Ident -> L_ident                                   (2)
	Integer -> L_integ                                 (3)
	Program -> ListTopStm                              (4)
	Program -> Exp                                     (5)
	Type -> 'int'                                      (6)
	Type -> 'string'                                   (7)
	Type -> 'bool'                                     (8)
	Type -> 'void'                                     (9)
	Ref -> 'int&'                                      (10)
	Ref -> 'string&'                                   (11)
	Ref -> 'bool&'                                     (12)
	Exp6 -> String                                     (13)
	Exp6 -> Ident                                      (14)
	Exp6 -> '&' Ident                                  (15)
	Exp6 -> Ident '(' ListExp ')'                      (16)
	Exp6 -> Integer                                    (17)
	Exp6 -> 'true'                                     (18)
	Exp6 -> 'false'                                    (19)
	Exp6 -> '(' Exp ')'                                (20)
	Exp5 -> '-' Exp6                                   (21)
	Exp5 -> '!' Exp6                                   (22)
	Exp5 -> Exp6                                       (23)
	Exp4 -> Exp4 MulOp Exp5                            (24)
	Exp4 -> Exp5                                       (25)
	Exp3 -> Exp3 AddOp Exp4                            (26)
	Exp3 -> Exp4                                       (27)
	Exp2 -> Exp2 RelOp Exp3                            (28)
	Exp2 -> Exp3                                       (29)
	Exp1 -> Exp2 '&&' Exp1                             (30)
	Exp1 -> Exp2                                       (31)
	Exp -> Exp1 '||' Exp                               (32)
	Exp -> Exp1                                        (33)
	ListExp ->                                         (34)
	ListExp -> Exp                                     (35)
	ListExp -> Exp ',' ListExp                         (36)
	AddOp -> '+'                                       (37)
	AddOp -> '-'                                       (38)
	MulOp -> '*'                                       (39)
	MulOp -> '/'                                       (40)
	MulOp -> '%'                                       (41)
	RelOp -> '<'                                       (42)
	RelOp -> '<='                                      (43)
	RelOp -> '>'                                       (44)
	RelOp -> '>='                                      (45)
	RelOp -> '=='                                      (46)
	RelOp -> '!='                                      (47)
	TopStm -> Type ListItem ';'                        (48)
	TopStm -> Fun ';'                                  (49)
	TopStm -> Fun Block                                (50)
	Stm -> Type ListItem ';'                           (51)
	Stm -> Ident '=' Exp ';'                           (52)
	Stm -> 'if' '(' Exp ')' Block                      (53)
	Stm -> 'if' '(' Exp ')' Block 'else' Block         (54)
	Stm -> 'while' '(' Exp ')' Block                   (55)
	Stm -> Exp ';'                                     (56)
	Stm -> 'print' '(' ListExp ')' ';'                 (57)
	Stm -> Fun ';'                                     (58)
	Stm -> Fun Block                                   (59)
	Stm -> 'return' Exp ';'                            (60)
	Stm -> 'return' ';'                                (61)
	Item -> Ident                                      (62)
	Item -> Ident '=' Exp                              (63)
	ListItem -> Item                                   (64)
	ListItem -> Item ',' ListItem                      (65)
	ListTopStm ->                                      (66)
	ListTopStm -> ListTopStm TopStm                    (67)
	ListStm ->                                         (68)
	ListStm -> ListStm Stm                             (69)
	Block -> '{' ListStm '}'                           (70)
	Arg -> Type Ident                                  (71)
	Arg -> Ref Ident                                   (72)
	ListArg ->                                         (73)
	ListArg -> Arg                                     (74)
	ListArg -> Arg ',' ListArg                         (75)
	Fun -> Type Ident '(' ListArg ')'                  (76)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'/'            { PT _ (TS _ 12) }
	';'            { PT _ (TS _ 13) }
	'<'            { PT _ (TS _ 14) }
	'<='           { PT _ (TS _ 15) }
	'='            { PT _ (TS _ 16) }
	'=='           { PT _ (TS _ 17) }
	'>'            { PT _ (TS _ 18) }
	'>='           { PT _ (TS _ 19) }
	'bool'         { PT _ (TS _ 20) }
	'bool&'        { PT _ (TS _ 21) }
	'else'         { PT _ (TS _ 22) }
	'false'        { PT _ (TS _ 23) }
	'if'           { PT _ (TS _ 24) }
	'int'          { PT _ (TS _ 25) }
	'int&'         { PT _ (TS _ 26) }
	'print'        { PT _ (TS _ 27) }
	'return'       { PT _ (TS _ 28) }
	'string'       { PT _ (TS _ 29) }
	'string&'      { PT _ (TS _ 30) }
	'true'         { PT _ (TS _ 31) }
	'void'         { PT _ (TS _ 32) }
	'while'        { PT _ (TS _ 33) }
	'{'            { PT _ (TS _ 34) }
	'||'           { PT _ (TS _ 35) }
	'}'            { PT _ (TS _ 36) }
	L_quoted       { PT _ (TL $$) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	String          rule  1
	Ident           rule  2
	Integer         rule  3
	Program         rules 4, 5
	Type            rules 6, 7, 8, 9
	Ref             rules 10, 11, 12
	Exp6            rules 13, 14, 15, 16, 17, 18, 19, 20
	Exp5            rules 21, 22, 23
	Exp4            rules 24, 25
	Exp3            rules 26, 27
	Exp2            rules 28, 29
	Exp1            rules 30, 31
	Exp             rules 32, 33
	ListExp         rules 34, 35, 36
	AddOp           rules 37, 38
	MulOp           rules 39, 40, 41
	RelOp           rules 42, 43, 44, 45, 46, 47
	TopStm          rules 48, 49, 50
	Stm             rules 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61
	Item            rules 62, 63
	ListItem        rules 64, 65
	ListTopStm      rules 66, 67
	ListStm         rules 68, 69
	Block           rule  70
	Arg             rules 71, 72
	ListArg         rules 73, 74, 75
	Fun             rule  76

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'-'            shift, and enter state 18
	'bool'         reduce using rule 66
	'false'        shift, and enter state 19
	'int'          reduce using rule 66
	'string'       reduce using rule 66
	'true'         shift, and enter state 20
	'void'         reduce using rule 66
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22
	%eof           reduce using rule 66

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Program        goto state 6
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 13
	ListTopStm     goto state 14

State 1


	L_quoted       shift, and enter state 2


State 2

	String -> L_quoted .                                (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1
	%eof           reduce using rule 1


State 3

	Exp6 -> String .                                    (rule 13)

	'!='           reduce using rule 13
	'%'            reduce using rule 13
	'&&'           reduce using rule 13
	')'            reduce using rule 13
	'*'            reduce using rule 13
	'+'            reduce using rule 13
	','            reduce using rule 13
	'-'            reduce using rule 13
	'/'            reduce using rule 13
	';'            reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'=='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	'||'           reduce using rule 13
	%eof           reduce using rule 13


State 4

	Exp6 -> Ident .                                     (rule 14)
	Exp6 -> Ident . '(' ListExp ')'                     (rule 16)

	'!='           reduce using rule 14
	'%'            reduce using rule 14
	'&&'           reduce using rule 14
	'('            shift, and enter state 50
	')'            reduce using rule 14
	'*'            reduce using rule 14
	'+'            reduce using rule 14
	','            reduce using rule 14
	'-'            reduce using rule 14
	'/'            reduce using rule 14
	';'            reduce using rule 14
	'<'            reduce using rule 14
	'<='           reduce using rule 14
	'=='           reduce using rule 14
	'>'            reduce using rule 14
	'>='           reduce using rule 14
	'||'           reduce using rule 14
	%eof           reduce using rule 14


State 5

	Exp6 -> Integer .                                   (rule 17)

	'!='           reduce using rule 17
	'%'            reduce using rule 17
	'&&'           reduce using rule 17
	')'            reduce using rule 17
	'*'            reduce using rule 17
	'+'            reduce using rule 17
	','            reduce using rule 17
	'-'            reduce using rule 17
	'/'            reduce using rule 17
	';'            reduce using rule 17
	'<'            reduce using rule 17
	'<='           reduce using rule 17
	'=='           reduce using rule 17
	'>'            reduce using rule 17
	'>='           reduce using rule 17
	'||'           reduce using rule 17
	%eof           reduce using rule 17


State 6

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 7

	Exp5 -> Exp6 .                                      (rule 23)

	'!='           reduce using rule 23
	'%'            reduce using rule 23
	'&&'           reduce using rule 23
	')'            reduce using rule 23
	'*'            reduce using rule 23
	'+'            reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	'/'            reduce using rule 23
	';'            reduce using rule 23
	'<'            reduce using rule 23
	'<='           reduce using rule 23
	'=='           reduce using rule 23
	'>'            reduce using rule 23
	'>='           reduce using rule 23
	'||'           reduce using rule 23
	%eof           reduce using rule 23


State 8

	Exp4 -> Exp5 .                                      (rule 25)

	'!='           reduce using rule 25
	'%'            reduce using rule 25
	'&&'           reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	'+'            reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'/'            reduce using rule 25
	';'            reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'=='           reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	'||'           reduce using rule 25
	%eof           reduce using rule 25


State 9

	Exp4 -> Exp4 . MulOp Exp5                           (rule 24)
	Exp3 -> Exp4 .                                      (rule 27)

	'!='           reduce using rule 27
	'%'            shift, and enter state 47
	'&&'           reduce using rule 27
	')'            reduce using rule 27
	'*'            shift, and enter state 48
	'+'            reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'/'            shift, and enter state 49
	';'            reduce using rule 27
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'=='           reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	'||'           reduce using rule 27
	%eof           reduce using rule 27

	MulOp          goto state 46

State 10

	Exp3 -> Exp3 . AddOp Exp4                           (rule 26)
	Exp2 -> Exp3 .                                      (rule 29)

	'!='           reduce using rule 29
	'&&'           reduce using rule 29
	')'            reduce using rule 29
	'+'            shift, and enter state 44
	','            reduce using rule 29
	'-'            shift, and enter state 45
	';'            reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'=='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	'||'           reduce using rule 29
	%eof           reduce using rule 29

	AddOp          goto state 43

State 11

	Exp2 -> Exp2 . RelOp Exp3                           (rule 28)
	Exp1 -> Exp2 . '&&' Exp1                            (rule 30)
	Exp1 -> Exp2 .                                      (rule 31)

	'!='           shift, and enter state 36
	'&&'           shift, and enter state 37
	')'            reduce using rule 31
	','            reduce using rule 31
	';'            reduce using rule 31
	'<'            shift, and enter state 38
	'<='           shift, and enter state 39
	'=='           shift, and enter state 40
	'>'            shift, and enter state 41
	'>='           shift, and enter state 42
	'||'           reduce using rule 31
	%eof           reduce using rule 31

	RelOp          goto state 35

State 12

	Exp -> Exp1 . '||' Exp                              (rule 32)
	Exp -> Exp1 .                                       (rule 33)

	')'            reduce using rule 33
	','            reduce using rule 33
	';'            reduce using rule 33
	'||'           shift, and enter state 34
	%eof           reduce using rule 33


State 13

	Program -> Exp .                                    (rule 5)

	%eof           reduce using rule 5


State 14

	Program -> ListTopStm .                             (rule 4)
	ListTopStm -> ListTopStm . TopStm                   (rule 67)

	'bool'         shift, and enter state 30
	'int'          shift, and enter state 31
	'string'       shift, and enter state 32
	'void'         shift, and enter state 33
	%eof           reduce using rule 4

	Type           goto state 27
	TopStm         goto state 28
	Fun            goto state 29

State 15

	Exp5 -> '!' . Exp6                                  (rule 22)

	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 26

State 16

	Exp6 -> '&' . Ident                                 (rule 15)

	L_ident        shift, and enter state 21

	Ident          goto state 25

State 17

	Exp6 -> '(' . Exp ')'                               (rule 20)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'-'            shift, and enter state 18
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 24

State 18

	Exp5 -> '-' . Exp6                                  (rule 21)

	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 23

State 19

	Exp6 -> 'false' .                                   (rule 19)

	'!='           reduce using rule 19
	'%'            reduce using rule 19
	'&&'           reduce using rule 19
	')'            reduce using rule 19
	'*'            reduce using rule 19
	'+'            reduce using rule 19
	','            reduce using rule 19
	'-'            reduce using rule 19
	'/'            reduce using rule 19
	';'            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'=='           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	'||'           reduce using rule 19
	%eof           reduce using rule 19


State 20

	Exp6 -> 'true' .                                    (rule 18)

	'!='           reduce using rule 18
	'%'            reduce using rule 18
	'&&'           reduce using rule 18
	')'            reduce using rule 18
	'*'            reduce using rule 18
	'+'            reduce using rule 18
	','            reduce using rule 18
	'-'            reduce using rule 18
	'/'            reduce using rule 18
	';'            reduce using rule 18
	'<'            reduce using rule 18
	'<='           reduce using rule 18
	'=='           reduce using rule 18
	'>'            reduce using rule 18
	'>='           reduce using rule 18
	'||'           reduce using rule 18
	%eof           reduce using rule 18


State 21

	Ident -> L_ident .                                  (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2
	%eof           reduce using rule 2


State 22

	Integer -> L_integ .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3
	%eof           reduce using rule 3


State 23

	Exp5 -> '-' Exp6 .                                  (rule 21)

	'!='           reduce using rule 21
	'%'            reduce using rule 21
	'&&'           reduce using rule 21
	')'            reduce using rule 21
	'*'            reduce using rule 21
	'+'            reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	'/'            reduce using rule 21
	';'            reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'=='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'||'           reduce using rule 21
	%eof           reduce using rule 21


State 24

	Exp6 -> '(' Exp . ')'                               (rule 20)

	')'            shift, and enter state 64


State 25

	Exp6 -> '&' Ident .                                 (rule 15)

	'!='           reduce using rule 15
	'%'            reduce using rule 15
	'&&'           reduce using rule 15
	')'            reduce using rule 15
	'*'            reduce using rule 15
	'+'            reduce using rule 15
	','            reduce using rule 15
	'-'            reduce using rule 15
	'/'            reduce using rule 15
	';'            reduce using rule 15
	'<'            reduce using rule 15
	'<='           reduce using rule 15
	'=='           reduce using rule 15
	'>'            reduce using rule 15
	'>='           reduce using rule 15
	'||'           reduce using rule 15
	%eof           reduce using rule 15


State 26

	Exp5 -> '!' Exp6 .                                  (rule 22)

	'!='           reduce using rule 22
	'%'            reduce using rule 22
	'&&'           reduce using rule 22
	')'            reduce using rule 22
	'*'            reduce using rule 22
	'+'            reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'/'            reduce using rule 22
	';'            reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'=='           reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	'||'           reduce using rule 22
	%eof           reduce using rule 22


State 27

	TopStm -> Type . ListItem ';'                       (rule 48)
	Fun -> Type . Ident '(' ListArg ')'                 (rule 76)

	L_ident        shift, and enter state 21

	Ident          goto state 61
	Item           goto state 62
	ListItem       goto state 63

State 28

	ListTopStm -> ListTopStm TopStm .                   (rule 67)

	'bool'         reduce using rule 67
	'int'          reduce using rule 67
	'string'       reduce using rule 67
	'void'         reduce using rule 67
	%eof           reduce using rule 67


State 29

	TopStm -> Fun . ';'                                 (rule 49)
	TopStm -> Fun . Block                               (rule 50)

	';'            shift, and enter state 59
	'{'            shift, and enter state 60

	Block          goto state 58

State 30

	Type -> 'bool' .                                    (rule 8)

	L_ident        reduce using rule 8


State 31

	Type -> 'int' .                                     (rule 6)

	L_ident        reduce using rule 6


State 32

	Type -> 'string' .                                  (rule 7)

	L_ident        reduce using rule 7


State 33

	Type -> 'void' .                                    (rule 9)

	L_ident        reduce using rule 9


State 34

	Exp -> Exp1 '||' . Exp                              (rule 32)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'-'            shift, and enter state 18
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 57

State 35

	Exp2 -> Exp2 RelOp . Exp3                           (rule 28)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'-'            shift, and enter state 18
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 9
	Exp3           goto state 56

State 36

	RelOp -> '!=' .                                     (rule 47)

	'!'            reduce using rule 47
	'&'            reduce using rule 47
	'('            reduce using rule 47
	'-'            reduce using rule 47
	'false'        reduce using rule 47
	'true'         reduce using rule 47
	L_quoted       reduce using rule 47
	L_ident        reduce using rule 47
	L_integ        reduce using rule 47


State 37

	Exp1 -> Exp2 '&&' . Exp1                            (rule 30)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'-'            shift, and enter state 18
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 55

State 38

	RelOp -> '<' .                                      (rule 42)

	'!'            reduce using rule 42
	'&'            reduce using rule 42
	'('            reduce using rule 42
	'-'            reduce using rule 42
	'false'        reduce using rule 42
	'true'         reduce using rule 42
	L_quoted       reduce using rule 42
	L_ident        reduce using rule 42
	L_integ        reduce using rule 42


State 39

	RelOp -> '<=' .                                     (rule 43)

	'!'            reduce using rule 43
	'&'            reduce using rule 43
	'('            reduce using rule 43
	'-'            reduce using rule 43
	'false'        reduce using rule 43
	'true'         reduce using rule 43
	L_quoted       reduce using rule 43
	L_ident        reduce using rule 43
	L_integ        reduce using rule 43


State 40

	RelOp -> '==' .                                     (rule 46)

	'!'            reduce using rule 46
	'&'            reduce using rule 46
	'('            reduce using rule 46
	'-'            reduce using rule 46
	'false'        reduce using rule 46
	'true'         reduce using rule 46
	L_quoted       reduce using rule 46
	L_ident        reduce using rule 46
	L_integ        reduce using rule 46


State 41

	RelOp -> '>' .                                      (rule 44)

	'!'            reduce using rule 44
	'&'            reduce using rule 44
	'('            reduce using rule 44
	'-'            reduce using rule 44
	'false'        reduce using rule 44
	'true'         reduce using rule 44
	L_quoted       reduce using rule 44
	L_ident        reduce using rule 44
	L_integ        reduce using rule 44


State 42

	RelOp -> '>=' .                                     (rule 45)

	'!'            reduce using rule 45
	'&'            reduce using rule 45
	'('            reduce using rule 45
	'-'            reduce using rule 45
	'false'        reduce using rule 45
	'true'         reduce using rule 45
	L_quoted       reduce using rule 45
	L_ident        reduce using rule 45
	L_integ        reduce using rule 45


State 43

	Exp3 -> Exp3 AddOp . Exp4                           (rule 26)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'-'            shift, and enter state 18
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 54

State 44

	AddOp -> '+' .                                      (rule 37)

	'!'            reduce using rule 37
	'&'            reduce using rule 37
	'('            reduce using rule 37
	'-'            reduce using rule 37
	'false'        reduce using rule 37
	'true'         reduce using rule 37
	L_quoted       reduce using rule 37
	L_ident        reduce using rule 37
	L_integ        reduce using rule 37


State 45

	AddOp -> '-' .                                      (rule 38)

	'!'            reduce using rule 38
	'&'            reduce using rule 38
	'('            reduce using rule 38
	'-'            reduce using rule 38
	'false'        reduce using rule 38
	'true'         reduce using rule 38
	L_quoted       reduce using rule 38
	L_ident        reduce using rule 38
	L_integ        reduce using rule 38


State 46

	Exp4 -> Exp4 MulOp . Exp5                           (rule 24)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'-'            shift, and enter state 18
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 7
	Exp5           goto state 53

State 47

	MulOp -> '%' .                                      (rule 41)

	'!'            reduce using rule 41
	'&'            reduce using rule 41
	'('            reduce using rule 41
	'-'            reduce using rule 41
	'false'        reduce using rule 41
	'true'         reduce using rule 41
	L_quoted       reduce using rule 41
	L_ident        reduce using rule 41
	L_integ        reduce using rule 41


State 48

	MulOp -> '*' .                                      (rule 39)

	'!'            reduce using rule 39
	'&'            reduce using rule 39
	'('            reduce using rule 39
	'-'            reduce using rule 39
	'false'        reduce using rule 39
	'true'         reduce using rule 39
	L_quoted       reduce using rule 39
	L_ident        reduce using rule 39
	L_integ        reduce using rule 39


State 49

	MulOp -> '/' .                                      (rule 40)

	'!'            reduce using rule 40
	'&'            reduce using rule 40
	'('            reduce using rule 40
	'-'            reduce using rule 40
	'false'        reduce using rule 40
	'true'         reduce using rule 40
	L_quoted       reduce using rule 40
	L_ident        reduce using rule 40
	L_integ        reduce using rule 40


State 50

	Exp6 -> Ident '(' . ListExp ')'                     (rule 16)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	')'            reduce using rule 34
	'-'            shift, and enter state 18
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 51
	ListExp        goto state 52

State 51

	ListExp -> Exp .                                    (rule 35)
	ListExp -> Exp . ',' ListExp                        (rule 36)

	')'            reduce using rule 35
	','            shift, and enter state 71


State 52

	Exp6 -> Ident '(' ListExp . ')'                     (rule 16)

	')'            shift, and enter state 70


State 53

	Exp4 -> Exp4 MulOp Exp5 .                           (rule 24)

	'!='           reduce using rule 24
	'%'            reduce using rule 24
	'&&'           reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'+'            reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'/'            reduce using rule 24
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'=='           reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	'||'           reduce using rule 24
	%eof           reduce using rule 24


State 54

	Exp4 -> Exp4 . MulOp Exp5                           (rule 24)
	Exp3 -> Exp3 AddOp Exp4 .                           (rule 26)

	'!='           reduce using rule 26
	'%'            shift, and enter state 47
	'&&'           reduce using rule 26
	')'            reduce using rule 26
	'*'            shift, and enter state 48
	'+'            reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'/'            shift, and enter state 49
	';'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'=='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	'||'           reduce using rule 26
	%eof           reduce using rule 26

	MulOp          goto state 46

State 55

	Exp1 -> Exp2 '&&' Exp1 .                            (rule 30)

	')'            reduce using rule 30
	','            reduce using rule 30
	';'            reduce using rule 30
	'||'           reduce using rule 30
	%eof           reduce using rule 30


State 56

	Exp3 -> Exp3 . AddOp Exp4                           (rule 26)
	Exp2 -> Exp2 RelOp Exp3 .                           (rule 28)

	'!='           reduce using rule 28
	'&&'           reduce using rule 28
	')'            reduce using rule 28
	'+'            shift, and enter state 44
	','            reduce using rule 28
	'-'            shift, and enter state 45
	';'            reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	'||'           reduce using rule 28
	%eof           reduce using rule 28

	AddOp          goto state 43

State 57

	Exp -> Exp1 '||' Exp .                              (rule 32)

	')'            reduce using rule 32
	','            reduce using rule 32
	';'            reduce using rule 32
	%eof           reduce using rule 32


State 58

	TopStm -> Fun Block .                               (rule 50)

	'bool'         reduce using rule 50
	'int'          reduce using rule 50
	'string'       reduce using rule 50
	'void'         reduce using rule 50
	%eof           reduce using rule 50


State 59

	TopStm -> Fun ';' .                                 (rule 49)

	'bool'         reduce using rule 49
	'int'          reduce using rule 49
	'string'       reduce using rule 49
	'void'         reduce using rule 49
	%eof           reduce using rule 49


State 60

	Block -> '{' . ListStm '}'                          (rule 70)

	'!'            reduce using rule 68
	'&'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'bool'         reduce using rule 68
	'false'        reduce using rule 68
	'if'           reduce using rule 68
	'int'          reduce using rule 68
	'print'        reduce using rule 68
	'return'       reduce using rule 68
	'string'       reduce using rule 68
	'true'         reduce using rule 68
	'void'         reduce using rule 68
	'while'        reduce using rule 68
	'}'            reduce using rule 68
	L_quoted       reduce using rule 68
	L_ident        reduce using rule 68
	L_integ        reduce using rule 68

	ListStm        goto state 69

State 61

	Item -> Ident .                                     (rule 62)
	Item -> Ident . '=' Exp                             (rule 63)
	Fun -> Type Ident . '(' ListArg ')'                 (rule 76)

	'('            shift, and enter state 67
	','            reduce using rule 62
	';'            reduce using rule 62
	'='            shift, and enter state 68


State 62

	ListItem -> Item .                                  (rule 64)
	ListItem -> Item . ',' ListItem                     (rule 65)

	','            shift, and enter state 66
	';'            reduce using rule 64


State 63

	TopStm -> Type ListItem . ';'                       (rule 48)

	';'            shift, and enter state 65


State 64

	Exp6 -> '(' Exp ')' .                               (rule 20)

	'!='           reduce using rule 20
	'%'            reduce using rule 20
	'&&'           reduce using rule 20
	')'            reduce using rule 20
	'*'            reduce using rule 20
	'+'            reduce using rule 20
	','            reduce using rule 20
	'-'            reduce using rule 20
	'/'            reduce using rule 20
	';'            reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'=='           reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	'||'           reduce using rule 20
	%eof           reduce using rule 20


State 65

	TopStm -> Type ListItem ';' .                       (rule 48)

	'bool'         reduce using rule 48
	'int'          reduce using rule 48
	'string'       reduce using rule 48
	'void'         reduce using rule 48
	%eof           reduce using rule 48


State 66

	ListItem -> Item ',' . ListItem                     (rule 65)

	L_ident        shift, and enter state 21

	Ident          goto state 91
	Item           goto state 62
	ListItem       goto state 92

State 67

	Fun -> Type Ident '(' . ListArg ')'                 (rule 76)

	')'            reduce using rule 73
	'bool'         shift, and enter state 30
	'bool&'        shift, and enter state 88
	'int'          shift, and enter state 31
	'int&'         shift, and enter state 89
	'string'       shift, and enter state 32
	'string&'      shift, and enter state 90
	'void'         shift, and enter state 33

	Type           goto state 84
	Ref            goto state 85
	Arg            goto state 86
	ListArg        goto state 87

State 68

	Item -> Ident '=' . Exp                             (rule 63)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'-'            shift, and enter state 18
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 83

State 69

	ListStm -> ListStm . Stm                            (rule 69)
	Block -> '{' ListStm . '}'                          (rule 70)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'-'            shift, and enter state 18
	'bool'         shift, and enter state 30
	'false'        shift, and enter state 19
	'if'           shift, and enter state 78
	'int'          shift, and enter state 31
	'print'        shift, and enter state 79
	'return'       shift, and enter state 80
	'string'       shift, and enter state 32
	'true'         shift, and enter state 20
	'void'         shift, and enter state 33
	'while'        shift, and enter state 81
	'}'            shift, and enter state 82
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 73
	Integer        goto state 5
	Type           goto state 74
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 75
	Stm            goto state 76
	Fun            goto state 77

State 70

	Exp6 -> Ident '(' ListExp ')' .                     (rule 16)

	'!='           reduce using rule 16
	'%'            reduce using rule 16
	'&&'           reduce using rule 16
	')'            reduce using rule 16
	'*'            reduce using rule 16
	'+'            reduce using rule 16
	','            reduce using rule 16
	'-'            reduce using rule 16
	'/'            reduce using rule 16
	';'            reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'=='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'||'           reduce using rule 16
	%eof           reduce using rule 16


State 71

	ListExp -> Exp ',' . ListExp                        (rule 36)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	')'            reduce using rule 34
	'-'            shift, and enter state 18
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 51
	ListExp        goto state 72

State 72

	ListExp -> Exp ',' ListExp .                        (rule 36)

	')'            reduce using rule 36


State 73

	Exp6 -> Ident .                                     (rule 14)
	Exp6 -> Ident . '(' ListExp ')'                     (rule 16)
	Stm -> Ident . '=' Exp ';'                          (rule 52)

	'!='           reduce using rule 14
	'%'            reduce using rule 14
	'&&'           reduce using rule 14
	'('            shift, and enter state 50
	'*'            reduce using rule 14
	'+'            reduce using rule 14
	'-'            reduce using rule 14
	'/'            reduce using rule 14
	';'            reduce using rule 14
	'<'            reduce using rule 14
	'<='           reduce using rule 14
	'='            shift, and enter state 106
	'=='           reduce using rule 14
	'>'            reduce using rule 14
	'>='           reduce using rule 14
	'||'           reduce using rule 14


State 74

	Stm -> Type . ListItem ';'                          (rule 51)
	Fun -> Type . Ident '(' ListArg ')'                 (rule 76)

	L_ident        shift, and enter state 21

	Ident          goto state 61
	Item           goto state 62
	ListItem       goto state 105

State 75

	Stm -> Exp . ';'                                    (rule 56)

	';'            shift, and enter state 104


State 76

	ListStm -> ListStm Stm .                            (rule 69)

	'!'            reduce using rule 69
	'&'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'bool'         reduce using rule 69
	'false'        reduce using rule 69
	'if'           reduce using rule 69
	'int'          reduce using rule 69
	'print'        reduce using rule 69
	'return'       reduce using rule 69
	'string'       reduce using rule 69
	'true'         reduce using rule 69
	'void'         reduce using rule 69
	'while'        reduce using rule 69
	'}'            reduce using rule 69
	L_quoted       reduce using rule 69
	L_ident        reduce using rule 69
	L_integ        reduce using rule 69


State 77

	Stm -> Fun . ';'                                    (rule 58)
	Stm -> Fun . Block                                  (rule 59)

	';'            shift, and enter state 103
	'{'            shift, and enter state 60

	Block          goto state 102

State 78

	Stm -> 'if' . '(' Exp ')' Block                     (rule 53)
	Stm -> 'if' . '(' Exp ')' Block 'else' Block        (rule 54)

	'('            shift, and enter state 101


State 79

	Stm -> 'print' . '(' ListExp ')' ';'                (rule 57)

	'('            shift, and enter state 100


State 80

	Stm -> 'return' . Exp ';'                           (rule 60)
	Stm -> 'return' . ';'                               (rule 61)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'-'            shift, and enter state 18
	';'            shift, and enter state 99
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 98

State 81

	Stm -> 'while' . '(' Exp ')' Block                  (rule 55)

	'('            shift, and enter state 97


State 82

	Block -> '{' ListStm '}' .                          (rule 70)

	'!'            reduce using rule 70
	'&'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'bool'         reduce using rule 70
	'else'         reduce using rule 70
	'false'        reduce using rule 70
	'if'           reduce using rule 70
	'int'          reduce using rule 70
	'print'        reduce using rule 70
	'return'       reduce using rule 70
	'string'       reduce using rule 70
	'true'         reduce using rule 70
	'void'         reduce using rule 70
	'while'        reduce using rule 70
	'}'            reduce using rule 70
	L_quoted       reduce using rule 70
	L_ident        reduce using rule 70
	L_integ        reduce using rule 70
	%eof           reduce using rule 70


State 83

	Item -> Ident '=' Exp .                             (rule 63)

	','            reduce using rule 63
	';'            reduce using rule 63


State 84

	Arg -> Type . Ident                                 (rule 71)

	L_ident        shift, and enter state 21

	Ident          goto state 96

State 85

	Arg -> Ref . Ident                                  (rule 72)

	L_ident        shift, and enter state 21

	Ident          goto state 95

State 86

	ListArg -> Arg .                                    (rule 74)
	ListArg -> Arg . ',' ListArg                        (rule 75)

	')'            reduce using rule 74
	','            shift, and enter state 94


State 87

	Fun -> Type Ident '(' ListArg . ')'                 (rule 76)

	')'            shift, and enter state 93


State 88

	Ref -> 'bool&' .                                    (rule 12)

	L_ident        reduce using rule 12


State 89

	Ref -> 'int&' .                                     (rule 10)

	L_ident        reduce using rule 10


State 90

	Ref -> 'string&' .                                  (rule 11)

	L_ident        reduce using rule 11


State 91

	Item -> Ident .                                     (rule 62)
	Item -> Ident . '=' Exp                             (rule 63)

	','            reduce using rule 62
	';'            reduce using rule 62
	'='            shift, and enter state 68


State 92

	ListItem -> Item ',' ListItem .                     (rule 65)

	';'            reduce using rule 65


State 93

	Fun -> Type Ident '(' ListArg ')' .                 (rule 76)

	';'            reduce using rule 76
	'{'            reduce using rule 76


State 94

	ListArg -> Arg ',' . ListArg                        (rule 75)

	')'            reduce using rule 73
	'bool'         shift, and enter state 30
	'bool&'        shift, and enter state 88
	'int'          shift, and enter state 31
	'int&'         shift, and enter state 89
	'string'       shift, and enter state 32
	'string&'      shift, and enter state 90
	'void'         shift, and enter state 33

	Type           goto state 84
	Ref            goto state 85
	Arg            goto state 86
	ListArg        goto state 113

State 95

	Arg -> Ref Ident .                                  (rule 72)

	')'            reduce using rule 72
	','            reduce using rule 72


State 96

	Arg -> Type Ident .                                 (rule 71)

	')'            reduce using rule 71
	','            reduce using rule 71


State 97

	Stm -> 'while' '(' . Exp ')' Block                  (rule 55)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'-'            shift, and enter state 18
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 112

State 98

	Stm -> 'return' Exp . ';'                           (rule 60)

	';'            shift, and enter state 111


State 99

	Stm -> 'return' ';' .                               (rule 61)

	'!'            reduce using rule 61
	'&'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'bool'         reduce using rule 61
	'false'        reduce using rule 61
	'if'           reduce using rule 61
	'int'          reduce using rule 61
	'print'        reduce using rule 61
	'return'       reduce using rule 61
	'string'       reduce using rule 61
	'true'         reduce using rule 61
	'void'         reduce using rule 61
	'while'        reduce using rule 61
	'}'            reduce using rule 61
	L_quoted       reduce using rule 61
	L_ident        reduce using rule 61
	L_integ        reduce using rule 61


State 100

	Stm -> 'print' '(' . ListExp ')' ';'                (rule 57)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	')'            reduce using rule 34
	'-'            shift, and enter state 18
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 51
	ListExp        goto state 110

State 101

	Stm -> 'if' '(' . Exp ')' Block                     (rule 53)
	Stm -> 'if' '(' . Exp ')' Block 'else' Block        (rule 54)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'-'            shift, and enter state 18
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 109

State 102

	Stm -> Fun Block .                                  (rule 59)

	'!'            reduce using rule 59
	'&'            reduce using rule 59
	'('            reduce using rule 59
	'-'            reduce using rule 59
	'bool'         reduce using rule 59
	'false'        reduce using rule 59
	'if'           reduce using rule 59
	'int'          reduce using rule 59
	'print'        reduce using rule 59
	'return'       reduce using rule 59
	'string'       reduce using rule 59
	'true'         reduce using rule 59
	'void'         reduce using rule 59
	'while'        reduce using rule 59
	'}'            reduce using rule 59
	L_quoted       reduce using rule 59
	L_ident        reduce using rule 59
	L_integ        reduce using rule 59


State 103

	Stm -> Fun ';' .                                    (rule 58)

	'!'            reduce using rule 58
	'&'            reduce using rule 58
	'('            reduce using rule 58
	'-'            reduce using rule 58
	'bool'         reduce using rule 58
	'false'        reduce using rule 58
	'if'           reduce using rule 58
	'int'          reduce using rule 58
	'print'        reduce using rule 58
	'return'       reduce using rule 58
	'string'       reduce using rule 58
	'true'         reduce using rule 58
	'void'         reduce using rule 58
	'while'        reduce using rule 58
	'}'            reduce using rule 58
	L_quoted       reduce using rule 58
	L_ident        reduce using rule 58
	L_integ        reduce using rule 58


State 104

	Stm -> Exp ';' .                                    (rule 56)

	'!'            reduce using rule 56
	'&'            reduce using rule 56
	'('            reduce using rule 56
	'-'            reduce using rule 56
	'bool'         reduce using rule 56
	'false'        reduce using rule 56
	'if'           reduce using rule 56
	'int'          reduce using rule 56
	'print'        reduce using rule 56
	'return'       reduce using rule 56
	'string'       reduce using rule 56
	'true'         reduce using rule 56
	'void'         reduce using rule 56
	'while'        reduce using rule 56
	'}'            reduce using rule 56
	L_quoted       reduce using rule 56
	L_ident        reduce using rule 56
	L_integ        reduce using rule 56


State 105

	Stm -> Type ListItem . ';'                          (rule 51)

	';'            shift, and enter state 108


State 106

	Stm -> Ident '=' . Exp ';'                          (rule 52)

	'!'            shift, and enter state 15
	'&'            shift, and enter state 16
	'('            shift, and enter state 17
	'-'            shift, and enter state 18
	'false'        shift, and enter state 19
	'true'         shift, and enter state 20
	L_quoted       shift, and enter state 2
	L_ident        shift, and enter state 21
	L_integ        shift, and enter state 22

	String         goto state 3
	Ident          goto state 4
	Integer        goto state 5
	Exp6           goto state 7
	Exp5           goto state 8
	Exp4           goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 107

State 107

	Stm -> Ident '=' Exp . ';'                          (rule 52)

	';'            shift, and enter state 117


State 108

	Stm -> Type ListItem ';' .                          (rule 51)

	'!'            reduce using rule 51
	'&'            reduce using rule 51
	'('            reduce using rule 51
	'-'            reduce using rule 51
	'bool'         reduce using rule 51
	'false'        reduce using rule 51
	'if'           reduce using rule 51
	'int'          reduce using rule 51
	'print'        reduce using rule 51
	'return'       reduce using rule 51
	'string'       reduce using rule 51
	'true'         reduce using rule 51
	'void'         reduce using rule 51
	'while'        reduce using rule 51
	'}'            reduce using rule 51
	L_quoted       reduce using rule 51
	L_ident        reduce using rule 51
	L_integ        reduce using rule 51


State 109

	Stm -> 'if' '(' Exp . ')' Block                     (rule 53)
	Stm -> 'if' '(' Exp . ')' Block 'else' Block        (rule 54)

	')'            shift, and enter state 116


State 110

	Stm -> 'print' '(' ListExp . ')' ';'                (rule 57)

	')'            shift, and enter state 115


State 111

	Stm -> 'return' Exp ';' .                           (rule 60)

	'!'            reduce using rule 60
	'&'            reduce using rule 60
	'('            reduce using rule 60
	'-'            reduce using rule 60
	'bool'         reduce using rule 60
	'false'        reduce using rule 60
	'if'           reduce using rule 60
	'int'          reduce using rule 60
	'print'        reduce using rule 60
	'return'       reduce using rule 60
	'string'       reduce using rule 60
	'true'         reduce using rule 60
	'void'         reduce using rule 60
	'while'        reduce using rule 60
	'}'            reduce using rule 60
	L_quoted       reduce using rule 60
	L_ident        reduce using rule 60
	L_integ        reduce using rule 60


State 112

	Stm -> 'while' '(' Exp . ')' Block                  (rule 55)

	')'            shift, and enter state 114


State 113

	ListArg -> Arg ',' ListArg .                        (rule 75)

	')'            reduce using rule 75


State 114

	Stm -> 'while' '(' Exp ')' . Block                  (rule 55)

	'{'            shift, and enter state 60

	Block          goto state 120

State 115

	Stm -> 'print' '(' ListExp ')' . ';'                (rule 57)

	';'            shift, and enter state 119


State 116

	Stm -> 'if' '(' Exp ')' . Block                     (rule 53)
	Stm -> 'if' '(' Exp ')' . Block 'else' Block        (rule 54)

	'{'            shift, and enter state 60

	Block          goto state 118

State 117

	Stm -> Ident '=' Exp ';' .                          (rule 52)

	'!'            reduce using rule 52
	'&'            reduce using rule 52
	'('            reduce using rule 52
	'-'            reduce using rule 52
	'bool'         reduce using rule 52
	'false'        reduce using rule 52
	'if'           reduce using rule 52
	'int'          reduce using rule 52
	'print'        reduce using rule 52
	'return'       reduce using rule 52
	'string'       reduce using rule 52
	'true'         reduce using rule 52
	'void'         reduce using rule 52
	'while'        reduce using rule 52
	'}'            reduce using rule 52
	L_quoted       reduce using rule 52
	L_ident        reduce using rule 52
	L_integ        reduce using rule 52


State 118

	Stm -> 'if' '(' Exp ')' Block .                     (rule 53)
	Stm -> 'if' '(' Exp ')' Block . 'else' Block        (rule 54)

	'!'            reduce using rule 53
	'&'            reduce using rule 53
	'('            reduce using rule 53
	'-'            reduce using rule 53
	'bool'         reduce using rule 53
	'else'         shift, and enter state 121
	'false'        reduce using rule 53
	'if'           reduce using rule 53
	'int'          reduce using rule 53
	'print'        reduce using rule 53
	'return'       reduce using rule 53
	'string'       reduce using rule 53
	'true'         reduce using rule 53
	'void'         reduce using rule 53
	'while'        reduce using rule 53
	'}'            reduce using rule 53
	L_quoted       reduce using rule 53
	L_ident        reduce using rule 53
	L_integ        reduce using rule 53


State 119

	Stm -> 'print' '(' ListExp ')' ';' .                (rule 57)

	'!'            reduce using rule 57
	'&'            reduce using rule 57
	'('            reduce using rule 57
	'-'            reduce using rule 57
	'bool'         reduce using rule 57
	'false'        reduce using rule 57
	'if'           reduce using rule 57
	'int'          reduce using rule 57
	'print'        reduce using rule 57
	'return'       reduce using rule 57
	'string'       reduce using rule 57
	'true'         reduce using rule 57
	'void'         reduce using rule 57
	'while'        reduce using rule 57
	'}'            reduce using rule 57
	L_quoted       reduce using rule 57
	L_ident        reduce using rule 57
	L_integ        reduce using rule 57


State 120

	Stm -> 'while' '(' Exp ')' Block .                  (rule 55)

	'!'            reduce using rule 55
	'&'            reduce using rule 55
	'('            reduce using rule 55
	'-'            reduce using rule 55
	'bool'         reduce using rule 55
	'false'        reduce using rule 55
	'if'           reduce using rule 55
	'int'          reduce using rule 55
	'print'        reduce using rule 55
	'return'       reduce using rule 55
	'string'       reduce using rule 55
	'true'         reduce using rule 55
	'void'         reduce using rule 55
	'while'        reduce using rule 55
	'}'            reduce using rule 55
	L_quoted       reduce using rule 55
	L_ident        reduce using rule 55
	L_integ        reduce using rule 55


State 121

	Stm -> 'if' '(' Exp ')' Block 'else' . Block        (rule 54)

	'{'            shift, and enter state 60

	Block          goto state 122

State 122

	Stm -> 'if' '(' Exp ')' Block 'else' Block .        (rule 54)

	'!'            reduce using rule 54
	'&'            reduce using rule 54
	'('            reduce using rule 54
	'-'            reduce using rule 54
	'bool'         reduce using rule 54
	'false'        reduce using rule 54
	'if'           reduce using rule 54
	'int'          reduce using rule 54
	'print'        reduce using rule 54
	'return'       reduce using rule 54
	'string'       reduce using rule 54
	'true'         reduce using rule 54
	'void'         reduce using rule 54
	'while'        reduce using rule 54
	'}'            reduce using rule 54
	L_quoted       reduce using rule 54
	L_ident        reduce using rule 54
	L_integ        reduce using rule 54


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 77
Number of terminals: 39
Number of non-terminals: 28
Number of states: 123
